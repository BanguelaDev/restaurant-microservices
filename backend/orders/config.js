/**
 * üóÑÔ∏è CONFIGURA√á√ïES DO MYSQL - SERVI√áO DE PEDIDOS
 * 
 * Este arquivo cont√©m todas as configura√ß√µes necess√°rias para conectar
 * o servi√ßo de pedidos com o banco de dados MySQL.
 * 
 * IMPORTANTE: Este arquivo N√ÉO deve ser commitado no Git com dados reais!
 * Use sempre vari√°veis de ambiente (.env) para dados sens√≠veis.
 * 
 * ESTRUTURA DO MYSQL:
 * - host: Endere√ßo do servidor MySQL
 * - user: Nome do usu√°rio do banco
 * - password: Senha do usu√°rio (muito sens√≠vel!)
 * - database: Nome do banco de dados
 * - port: Porta do MySQL (padr√£o 3306)
 * - waitForConnections: Se deve aguardar conex√µes dispon√≠veis
 * - connectionLimit: N√∫mero m√°ximo de conex√µes simult√¢neas
 * - queueLimit: Limite da fila de espera por conex√µes
 * 
 * SEGURAN√áA:
 * - Nunca exponha password em c√≥digo
 * - Use sempre vari√°veis de ambiente
 * - Crie usu√°rio espec√≠fico para o servi√ßo
 * - Limite permiss√µes do usu√°rio
 * - Monitore acesso ao banco
 */

// Importar depend√™ncias para gerenciar vari√°veis de ambiente
const dotenv = require("dotenv");             // Carrega vari√°veis do arquivo .env
const path = require("path");                 // Utilit√°rio para manipular caminhos de arquivo

// Carregar vari√°veis de ambiente do arquivo .env na pasta atual
// Isso permite configurar credenciais sem modificar o c√≥digo
dotenv.config({ path: path.resolve(__dirname, ".env") });

/**
 * Configura√ß√£o do MySQL para o servi√ßo de pedidos
 * 
 * Esta configura√ß√£o √© usada para:
 * 1. Conectar ao servidor MySQL
 * 2. Autenticar com usu√°rio e senha
 * 3. Selecionar banco de dados espec√≠fico
 * 4. Configurar pool de conex√µes
 * 
 * ESTRUTURA:
 * - host: Endere√ßo IP ou hostname do MySQL
 * - user: Nome do usu√°rio do banco
 * - password: Senha do usu√°rio
 * - database: Nome do banco de dados
 * - port: Porta do MySQL (padr√£o 3306)
 * - waitForConnections: Aguardar conex√µes dispon√≠veis
 * - connectionLimit: M√°ximo de conex√µes simult√¢neas
 * - queueLimit: Limite da fila de espera
 * 
 * CONFIGURA√á√ïES DO POOL:
 * - waitForConnections: true - Aguarda conex√µes ficarem dispon√≠veis
 * - connectionLimit: 10 - M√°ximo de 10 conex√µes simult√¢neas
 * - queueLimit: 0 - Sem limite na fila de espera
 */
const mysqlConfig = {
  // Endere√ßo do servidor MySQL (localhost para desenvolvimento local)
  host: process.env.DB_HOST,
  
  // Nome do usu√°rio do banco de dados
  user: process.env.DB_USER,
  
  // Senha do usu√°rio (obrigat√≥rio e sens√≠vel!)
  password: process.env.DB_PASSWORD,
  
  // Nome do banco de dados espec√≠fico para pedidos
  database: process.env.DB_NAME,
  
  // Porta do MySQL (3306 √© a porta padr√£o)
  port: process.env.DB_PORT,
  
  // Configura√ß√µes do pool de conex√µes
  waitForConnections: true,      // Aguardar conex√µes dispon√≠veis
  connectionLimit: 10,           // M√°ximo de 10 conex√µes simult√¢neas
  queueLimit: 0                  // Sem limite na fila de espera
};

// Exportar a configura√ß√£o para ser usada no database.js
module.exports = mysqlConfig;

/**
 * üìÅ EXEMPLO DE ARQUIVO .env
 * 
 * Crie um arquivo chamado .env na pasta backend/orders/ com:
 * 
 * # Configura√ß√µes do MySQL
 * DB_HOST=localhost
 * DB_USER=root
 * DB_PASSWORD=sua_senha_mysql
 * DB_NAME=restaurant_orders
 * DB_PORT=3306
 * 
 * ‚ö†Ô∏è IMPORTANTE:
 * - N√£o commite o arquivo .env no Git
 * - Adicione .env ao .gitignore
 * - Mantenha as credenciais seguras
 * - Use diferentes credenciais para desenvolvimento e produ√ß√£o
 * 
 * üîß COMO CONFIGURAR:
 * 
 * 1. **Instalar MySQL**:
 *    - Windows: MySQL Installer
 *    - macOS: brew install mysql
 *    - Linux: sudo apt install mysql-server
 * 
 * 2. **Criar Banco de Dados**:
 *    ```sql
 *    CREATE DATABASE restaurant_orders;
 *    USE restaurant_orders;
 *    ```
 * 
 * 3. **Criar Tabela**:
 *    ```sql
 *    CREATE TABLE orders (
 *        id INT AUTO_INCREMENT PRIMARY KEY,
 *        user_id VARCHAR(255) NOT NULL,
 *        items JSON NOT NULL,
 *        total DECIMAL(10,2) NOT NULL,
 *        status ENUM('pending', 'preparing', 'ready', 'delivered') DEFAULT 'pending',
 *        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 *        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
 *    );
 *    ```
 * 
 * 4. **Criar Usu√°rio (Opcional, mas recomendado)**:
 *    ```sql
 *    CREATE USER 'restaurant_user'@'localhost' IDENTIFIED BY 'senha_segura';
 *    GRANT ALL PRIVILEGES ON restaurant_orders.* TO 'restaurant_user'@'localhost';
 *    FLUSH PRIVILEGES;
 *    ```
 * 
 * 5. **Configurar .env**:
 *    - Copie o exemplo acima
 *    - Substitua os valores pelos seus
 *    - Use o usu√°rio criado em vez de root (mais seguro)
 * 
 * üö® PROBLEMAS COMUNS:
 * 
 * **Erro: "Access denied for user"**:
 * - Verifique usu√°rio e senha no .env
 * - Confirme se o usu√°rio tem permiss√µes no banco
 * - Tente conectar manualmente: mysql -u usuario -p
 * 
 * **Erro: "Unknown database"**:
 * - Verifique se o banco restaurant_orders existe
 * - Execute: CREATE DATABASE restaurant_orders;
 * 
 * **Erro: "Connection refused"**:
 * - Verifique se o MySQL est√° rodando
 * - Windows: Services > MySQL
 * - macOS/Linux: sudo systemctl status mysql
 * 
 * **Erro: "Table doesn't exist"**:
 * - Execute o script de cria√ß√£o da tabela
 * - Verifique se est√° no banco correto: USE restaurant_orders;
 * 
 * üìä MONITORAMENTO:
 * 
 * Para verificar se est√° funcionando:
 * ```sql
 * -- Verificar conex√µes ativas
 * SHOW PROCESSLIST;
 * 
 * -- Verificar status do banco
 * SHOW STATUS LIKE 'Connections';
 * 
 * -- Verificar tabelas
 * SHOW TABLES;
 * 
 * -- Verificar estrutura da tabela
 * DESCRIBE orders;
 * ```
 */

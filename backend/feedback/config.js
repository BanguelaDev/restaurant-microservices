/**
 * üóÑÔ∏è CONFIGURA√á√ïES DO MONGODB - SERVI√áO DE FEEDBACK
 * 
 * Este arquivo cont√©m todas as configura√ß√µes necess√°rias para conectar
 * o servi√ßo de feedback com o banco de dados MongoDB.
 * 
 * IMPORTANTE: Este arquivo N√ÉO deve ser commitado no Git com dados reais!
 * Use sempre vari√°veis de ambiente (.env) para dados sens√≠veis.
 * 
 * ESTRUTURA DO MONGODB:
 * - url: Endere√ßo do servidor MongoDB
 * - database: Nome do banco de dados
 * - collection: Nome da cole√ß√£o (similar a tabela no SQL)
 * 
 * SEGURAN√áA:
 * - Nunca exponha credenciais em c√≥digo
 * - Use sempre vari√°veis de ambiente
 * - Configure autentica√ß√£o no MongoDB se necess√°rio
 * - Monitore acesso ao banco
 * - Use redes privadas em produ√ß√£o
 * 
 * VANTAGENS DO MONGODB:
 * - Schema flex√≠vel (campos opcionais)
 * - Documentos JSON nativos
 * - Agrega√ß√µes poderosas para estat√≠sticas
 * - Escalabilidade horizontal autom√°tica
 * - √çndices para consultas r√°pidas
 */

// Importar depend√™ncias para gerenciar vari√°veis de ambiente
const dotenv = require("dotenv");             // Carrega vari√°veis do arquivo .env
const path = require("path");                 // Utilit√°rio para manipular caminhos de arquivo

// Carregar vari√°veis de ambiente do arquivo .env na pasta atual
// Isso permite configurar credenciais sem modificar o c√≥digo
dotenv.config({ path: path.resolve(__dirname, ".env") });

/**
 * Configura√ß√£o do MongoDB para o servi√ßo de feedback
 * 
 * Esta configura√ß√£o √© usada para:
 * 1. Conectar ao servidor MongoDB
 * 2. Selecionar banco de dados espec√≠fico
 * 3. Acessar cole√ß√£o espec√≠fica
 * 4. Configurar opera√ß√µes do banco
 * 
 * ESTRUTURA:
 * - url: Endere√ßo IP ou hostname do MongoDB
 * - database: Nome do banco de dados
 * - collection: Nome da cole√ß√£o (similar a tabela)
 * 
 * CONFIGURA√á√ïES PADR√ÉO:
 * - url: mongodb://localhost:27017 (desenvolvimento local)
 * - database: restaurant_feedback
 * - collection: feedback
 * 
 * NOTA:
 * - MongoDB n√£o requer usu√°rio/senha por padr√£o (desenvolvimento)
 * - Em produ√ß√£o, sempre configure autentica√ß√£o
 * - Use vari√°veis de ambiente para diferentes ambientes
 */
const mongoConfig = {
  // URL de conex√£o com o servidor MongoDB
  // Formato: mongodb://[username:password@]host[:port]/[database]
  // Exemplos:
  // - mongodb://localhost:27017 (local sem autentica√ß√£o)
  // - mongodb://user:pass@localhost:27017 (local com autentica√ß√£o)
  // - mongodb://cluster.mongodb.net (MongoDB Atlas)
  url: process.env.MONGODB_URL || 'mongodb://localhost:27017',
  
  // Nome do banco de dados espec√≠fico para feedback
  // MongoDB criar√° automaticamente se n√£o existir
  database: process.env.MONGODB_DATABASE || 'restaurant_feedback',
  
  // Nome da cole√ß√£o (similar a tabela no SQL)
  // MongoDB criar√° automaticamente se n√£o existir
  collection: process.env.MONGODB_COLLECTION || 'feedback'
};

// Exportar a configura√ß√£o para ser usada no database.js
module.exports = mongoConfig;

/**
 * üìÅ EXEMPLO DE ARQUIVO .env
 * 
 * Crie um arquivo chamado .env na pasta backend/feedback/ com:
 * 
 * # Configura√ß√µes do MongoDB
 * MONGODB_URL=mongodb://localhost:27017
 * MONGODB_DATABASE=restaurant_feedback
 * MONGODB_COLLECTION=feedback
 * 
 * ‚ö†Ô∏è IMPORTANTE:
 * - N√£o commite o arquivo .env no Git
 * - Adicione .env ao .gitignore
 * - Mantenha as credenciais seguras
 * - Use diferentes configura√ß√µes para desenvolvimento e produ√ß√£o
 * 
 * üîß COMO CONFIGURAR:
 * 
 * 1. **Instalar MongoDB**:
 *    - Windows: MongoDB Community Server
 *    - macOS: brew install mongodb-community
 *    - Linux: sudo apt install mongodb
 * 
 * 2. **Iniciar MongoDB**:
 *    - Windows: Servi√ßo autom√°tico
 *    - macOS: brew services start mongodb-community
 *    - Linux: sudo systemctl start mongod
 * 
 * 3. **Verificar Status**:
 *    - Windows: Services > MongoDB
 *    - macOS: brew services list
 *    - Linux: sudo systemctl status mongod
 * 
 * 4. **Conectar via Shell**:
 *    ```bash
 *    mongosh
 *    # ou
 *    mongo
 *    ```
 * 
 * 5. **Criar Banco e Cole√ß√£o (Opcional)**:
 *    ```javascript
 *    use restaurant_feedback
 *    db.createCollection('feedback')
 *    ```
 * 
 * 6. **Configurar .env**:
 *    - Copie o exemplo acima
 *    - Substitua os valores pelos seus
 *    - Verifique se o MongoDB est√° rodando
 * 
 * üö® PROBLEMAS COMUNS:
 * 
 * **Erro: "Connection refused"**:
 * - Verifique se o MongoDB est√° rodando
 * - Windows: Services > MongoDB
 * - macOS: brew services start mongodb-community
 * - Linux: sudo systemctl start mongod
 * 
 * **Erro: "ECONNREFUSED"**:
 * - Verifique se a porta 27017 est√° aberta
 * - Teste: telnet localhost 27017
 * - Verifique firewall/antiv√≠rus
 * 
 * **Erro: "Authentication failed"**:
 * - Verifique usu√°rio e senha no .env
 * - Confirme se o usu√°rio tem permiss√µes
 * - Tente conectar sem autentica√ß√£o primeiro
 * 
 * **Erro: "Database not found"**:
 * - MongoDB cria bancos automaticamente
 * - Verifique se o nome est√° correto no .env
 * - Tente conectar via mongosh primeiro
 * 
 * üìä MONITORAMENTO:
 * 
 * Para verificar se est√° funcionando:
 * ```bash
 * # Conectar ao MongoDB
 * mongosh
 * 
 * # Listar bancos
 * show dbs
 * 
 * # Usar banco espec√≠fico
 * use restaurant_feedback
 * 
 * # Listar cole√ß√µes
 * show collections
 * 
 * # Verificar documentos
 * db.feedback.find().limit(1)
 * 
 * # Verificar estat√≠sticas
 * db.feedback.stats()
 * ```
 * 
 * üîê AUTENTICA√á√ÉO (OPCIONAL):
 * 
 * Para adicionar autentica√ß√£o em desenvolvimento:
 * ```javascript
 * // Conectar como admin
 * use admin
 * 
 * // Criar usu√°rio
 * db.createUser({
 *   user: "restaurant_user",
 *   pwd: "senha_segura",
 *   roles: [
 *     { role: "readWrite", db: "restaurant_feedback" }
 *   ]
 * })
 * 
 * // Configurar .env com autentica√ß√£o
 * MONGODB_URL=mongodb://restaurant_user:senha_segura@localhost:27017
 * ```
 * 
 * üåê MONGODB ATLAS (CLOUD):
 * 
 * Para usar MongoDB na nuvem:
 * 1. Crie conta em mongodb.com/atlas
 * 2. Crie cluster gratuito
 * 3. Obtenha string de conex√£o
 * 4. Configure .env:
 *    ```
 *    MONGODB_URL=mongodb+srv://user:pass@cluster.mongodb.net
 *    MONGODB_DATABASE=restaurant_feedback
 *    MONGODB_COLLECTION=feedback
 *    ```
 * 
 * üìà PERFORMANCE:
 * 
 * Para melhorar performance:
 * ```javascript
 * // Criar √≠ndices
 * db.feedback.createIndex({ "user_id": 1 })
 * db.feedback.createIndex({ "rating": 1 })
 * db.feedback.createIndex({ "created_at": -1 })
 * 
 * // Verificar √≠ndices
 * db.feedback.getIndexes()
 * 
 * // Verificar performance das queries
 * db.feedback.find({ "rating": 5 }).explain("executionStats")
 * ```
 */

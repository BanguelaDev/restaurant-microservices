@echo off
REM ========================================
REM   SISTEMA DE MICROSSERVI√áOS - RESTAURANTE
REM   SCRIPT DE INICIALIZA√á√ÉO AUTOM√ÅTICA
REM ========================================
REM
REM Este arquivo batch (.bat) automatiza o processo de inicializa√ß√£o
REM de todos os servi√ßos do sistema de microsservi√ßos do restaurante.
REM
REM FUNCIONAMENTO:
REM 1. Inicia cada servi√ßo em uma janela separada do CMD
REM 2. Permite monitorar logs de cada servi√ßo independentemente
REM 3. Facilita debugging e desenvolvimento
REM 4. Evita ter que abrir m√∫ltiplos terminais manualmente
REM
REM SERVI√áOS INICIADOS:
REM - Auth Service (Porta 3001): Autentica√ß√£o com Firebase
REM - Orders Service (Porta 3002): Gerenciamento de pedidos (MySQL)
REM - Feedback Service (Porta 3003): Sistema de feedback (MongoDB)
REM - Frontend (Porta 3000): Interface React do usu√°rio
REM
REM PR√â-REQUISITOS:
REM - Node.js instalado e configurado
REM - Depend√™ncias instaladas (npm install executado)
REM - Bancos de dados configurados e rodando
REM - Firebase configurado para autentica√ß√£o

echo ========================================
echo   Sistema de Microsservicos - Restaurante
echo ========================================
echo.
echo Iniciando todos os servicos...
echo.

REM ============================================================================
REM üîê INICIANDO SERVI√áO DE AUTENTICA√á√ÉO
REM ============================================================================
REM
REM Este servi√ßo gerencia:
REM - Login e registro de usu√°rios
REM - Verifica√ß√£o de tokens Firebase
REM - Middleware de autentica√ß√£o
REM - Comunica√ß√£o com Firebase Admin SDK
REM
REM CONFIGURA√á√ÉO:
REM - Porta: 3001
REM - Banco: Firebase (Cloud)
REM - Depend√™ncias: firebase-admin, express, cors

echo [1/4] Iniciando servico de autenticacao...
start "Auth Service" cmd /k "cd backend\auth && npm start"

REM ============================================================================
REM üìã INICIANDO SERVI√áO DE PEDIDOS
REM ============================================================================
REM
REM Este servi√ßo gerencia:
REM - CRUD completo de pedidos
REM - Consultas por usu√°rio e status
REM - Valida√ß√£o de dados de entrada
REM - Comunica√ß√£o com MySQL
REM
REM CONFIGURA√á√ÉO:
REM - Porta: 3002
REM - Banco: MySQL (Local)
REM - Depend√™ncias: mysql2, express, cors

echo [2/4] Iniciando servico de pedidos...
start "Orders Service" cmd /k "cd backend\orders && npm start"

REM ============================================================================
REM ‚≠ê INICIANDO SERVI√áO DE FEEDBACK
REM ============================================================================
REM
REM Este servi√ßo gerencia:
REM - Sistema de avalia√ß√µes (1-5 estrelas)
REM - Coment√°rios opcionais
REM - Estat√≠sticas agregadas
REM - Comunica√ß√£o com MongoDB
REM
REM CONFIGURA√á√ÉO:
REM - Porta: 3003
REM - Banco: MongoDB (Local)
REM - Depend√™ncias: mongodb, express, cors

echo [3/4] Iniciando servico de feedback...
start "Feedback Service" cmd /k "cd backend\feedback && npm start"

REM ============================================================================
REM üé® INICIANDO FRONTEND REACT
REM ============================================================================
REM
REM Este servi√ßo fornece:
REM - Interface do usu√°rio
REM - Sistema de autentica√ß√£o
REM - Gerenciamento de pedidos
REM - Sistema de feedback
REM
REM CONFIGURA√á√ÉO:
REM - Porta: 3000
REM - Framework: React + Tailwind CSS
REM - Depend√™ncias: react, react-router-dom, firebase

echo [4/4] Iniciando frontend...
start "Frontend" cmd /k "cd frontend && npm start"

REM ============================================================================
REM ‚úÖ CONFIRMA√á√ÉO DE INICIALIZA√á√ÉO
REM ============================================================================
REM
REM Ap√≥s executar este script:
REM - 4 janelas CMD ser√£o abertas
REM - Cada servi√ßo ser√° iniciado automaticamente
REM - Logs de inicializa√ß√£o ser√£o exibidos
REM - Servi√ßos estar√£o dispon√≠veis nas portas especificadas

echo.
echo Todos os servicos foram iniciados!
echo.

REM ============================================================================
REM üåê INFORMA√á√ïES DE ACESSO
REM ============================================================================
REM
REM URLs dos servi√ßos para acesso e teste:
REM - Frontend: Interface principal do usu√°rio
REM - Auth Service: Endpoints de autentica√ß√£o
REM - Orders Service: Endpoints de pedidos
REM - Feedback Service: Endpoints de feedback

echo Portas dos servicos:
echo - Frontend: http://localhost:3000
echo - Auth Service: http://localhost:3001
echo - Orders Service: http://localhost:3002
echo - Feedback Service: http://localhost:3003
echo.

REM ============================================================================
REM üîç VERIFICA√á√ÉO DE FUNCIONAMENTO
REM ============================================================================
REM
REM Para verificar se todos os servi√ßos est√£o funcionando:
REM 1. Acesse http://localhost:3000 (frontend)
REM 2. Teste endpoints de health check:
REM    - http://localhost:3001/health
REM    - http://localhost:3002/health
REM    - http://localhost:3003/health
REM 3. Verifique logs em cada janela CMD
REM 4. Teste funcionalidades b√°sicas

echo Para verificar se esta funcionando:
echo 1. Acesse http://localhost:3000
echo 2. Teste os endpoints de health check
echo 3. Verifique os logs em cada janela
echo.

REM ============================================================================
REM üö® SOLU√á√ÉO DE PROBLEMAS
REM ============================================================================
REM
REM Problemas comuns e solu√ß√µes:
REM - Porta j√° em uso: Verifique se outro processo est√° usando a porta
REM - Erro de depend√™ncias: Execute npm install em cada pasta
REM - Erro de banco: Verifique se MySQL/MongoDB est√£o rodando
REM - Erro Firebase: Verifique configura√ß√£o no .env

echo Se houver problemas:
echo - Verifique se as dependencias estao instaladas
echo - Confirme se os bancos de dados estao rodando
echo - Verifique as configuracoes nos arquivos .env
echo.

REM ============================================================================
REM ‚è∏Ô∏è PAUSA PARA LEITURA
REM ============================================================================
REM
REM Pausa para permitir leitura das informa√ß√µes
REM Pressione qualquer tecla para fechar esta janela
REM Os servi√ßos continuar√£o rodando nas outras janelas

echo Pressione qualquer tecla para sair...
pause > nul

REM ============================================================================
REM üìö RESUMO DO SCRIPT
REM ============================================================================
REM
REM Este script automatiza:
REM 1. Inicializa√ß√£o de todos os microsservi√ßos
REM 2. Abertura de janelas separadas para cada servi√ßo
REM 3. Facilita desenvolvimento e debugging
REM 4. Reduz tempo de setup do ambiente
REM
REM ARQUITETURA INICIADA:
REM - Frontend React (Porta 3000)
REM - Auth Service Firebase (Porta 3001)
REM - Orders Service MySQL (Porta 3002)
REM - Feedback Service MongoDB (Porta 3003)
REM
REM BENEF√çCIOS PARA DESENVOLVIMENTO:
REM - Setup r√°pido do ambiente
REM - Visualiza√ß√£o independente dos logs
REM - F√°cil identifica√ß√£o de problemas
REM - Desenvolvimento paralelo dos servi√ßos
REM
REM NOTAS IMPORTANTES:
REM - Cada servi√ßo roda independentemente
REM - Falha em um servi√ßo n√£o afeta os outros
REM - Logs s√£o exibidos em tempo real
REM - F√°cil parada individual de servi√ßos
